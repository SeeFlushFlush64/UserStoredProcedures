@using PalaganasTechnicalExam.Helpers
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model PalaganasTechnicalExam.Models.ViewModels.PaginatedUserListViewModel


<style>
    th a {
    text-decoration: none;
    color: inherit;
    }

    th a:hover {
    color: #007bff;
    }
</style>



<form asp-action="List" method="get" class="mb-3 d-flex">
    <input type="text" name="searchQuery" class="form-control me-2" placeholder="Search users..." value="@Context.Request.Query["searchQuery"]">
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<h1>
    Users
</h1>

<form id="deleteForm" method="post" asp-action="Delete">
    <input type="hidden" name="id" id="deleteUserId" />
</form>


@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}
@if (TempData["AddedSuccessfully"] != null)
{
    <div class="alert alert-success">
        @TempData["AddedSuccessfully"]
    </div>
}
@if (TempData["UpdatedSuccessfully"] != null)
{
    <div class="alert alert-success">
        @TempData["UpdatedSuccessfully"]
    </div>
}
@if (TempData["DeletedSuccessfully"] != null)
{
    <div class="alert alert-success">
        @TempData["DeletedSuccessfully"]
    </div>
}
@if(Model is null)
{
    <p>No users added. Add users to store here.</p>
}
else
{
    @* <form asp-action="Index" method="get"> *@
    @*     <div class="dropdown"> *@
    @*         <button class="btn btn-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false"> *@
    @*             <i class="bi bi-filter"></i> Filter Null Fields *@
    @*         </button> *@
    @*         <ul class="dropdown-menu" aria-labelledby="filterDropdown"> *@
    @*             <li class="dropdown-item"> *@
    @*                 <label> *@
    @*                     <input type="checkbox" name="filterNullFirstName" value="true" onchange="this.form.submit()" *@
    @*                     @(Context.Request.Query["filterNullFirstName"] == "true" ? "checked" : "") /> *@
    @*                     Null First Name *@
    @*                 </label> *@
    @*             </li> *@
    @*             <li class="dropdown-item"> *@
    @*                 <label> *@
    @*                     <input type="checkbox" name="filterNullLastName" value="true" onchange="this.form.submit()" *@
    @*                     @(Context.Request.Query["filterNullLastName"] == "true" ? "checked" : "") /> *@
    @*                     Null Last Name *@
    @*                 </label> *@
    @*             </li> *@
    @*             <li class="dropdown-item"> *@
    @*                 <label> *@
    @*                     <input type="checkbox" name="filterNullEmail" value="true" onchange="this.form.submit()" *@
    @*                     @(Context.Request.Query["filterNullEmail"] == "true" ? "checked" : "") /> *@
    @*                     Null Email *@
    @*                 </label> *@
    @*             </li> *@
    @*             <button type="submit">Apply Filters</button> *@
    @*         </ul> *@
    @*     </div> *@
    @* </form> *@




    <table class="table">
        <thead>
            <tr>
                <th>
                    Profile Picture
                </th>
                <th>
                    <a asp-action="List" asp-route-sortColumn="FirstName" asp-route-sortOrder="@(Model.SortColumn == "FirstName" && Model.SortOrder == "ASC" ? "DESC" : "ASC")">
                        First Name
                        @if (Model.SortColumn == "FirstName")
                        {
                            <span>@(Model.SortOrder == "ASC" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="List" asp-route-sortColumn="LastName" asp-route-sortOrder="@(Model.SortColumn == "LastName" && Model.SortOrder == "ASC" ? "DESC" : "ASC")">
                        Last Name
                        @if (Model.SortColumn == "LastName")
                        {
                            <span>@(Model.SortOrder == "ASC" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="List" asp-route-sortColumn="Email" asp-route-sortOrder="@(Model.SortColumn == "Email" && Model.SortOrder == "ASC" ? "DESC" : "ASC")">
                        Email
                        @if (Model.SortColumn == "Email")
                        {
                            <span>@(Model.SortOrder == "ASC" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(user.ProfilePictureUrl))
                        {
                            Console.WriteLine(user.ProfilePictureUrl);
                            var formattedUrl = GoogleDriveHelper.ConvertGoogleDriveLink(user.ProfilePictureUrl);
                            <img src = @formattedUrl alt = "Profile Picture" height = "50" width = "50" >
                        }
                        else
                        {
                            <img src="https://static-00.iconduck.com/assets.00/person-icon-476x512-hr6biidg.png" alt="Profile Picture" height="50" width="50">
                        }
                    </td>
                    <td>
                        @user.FirstName
                    </td>
                    <td>
                        @user.LastName
                    </td>
                    <td>
                        @user.Email
                    </td>
                    <td>
                        <a class="btn btn-primary" asp-route-id=@user.UserId asp-controller="User" asp-action="Edit">Edit</a>
                        <button class="btn btn-danger" onclick="confirmDelete(@user.UserId)">Delete</button>
                    </td>
                  
                        
                    
                </tr>
            }
        </tbody>
    </table>

    <nav class="d-flex justify-content-center">
        <ul class="pagination">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="List" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-searchQuery="@Model.SearchQuery">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" asp-action="List" asp-route-pageNumber="@i" asp-route-searchQuery="@Model.SearchQuery">@i</a>
                </li>
            }

            @if (Model.PageNumber < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="List" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-searchQuery="@Model.SearchQuery">Next</a>
                </li>
            }
        </ul>
    </nav>
}
<script>
    // Wait for the page to load
    document.addEventListener("DOMContentLoaded", function () {
        // Select all success alerts
        let alerts = document.querySelectorAll(".alert-success");

        alerts.forEach(alert => {
            // Set a timeout to remove the alert after 3 seconds
            setTimeout(() => {
                alert.style.transition = "opacity 0.5s ease-out";
                alert.style.opacity = "0";
                setTimeout(() => alert.remove(), 500); // Remove from DOM after fade-out
            }, 3000);
        });
    });
    function confirmDelete(userId) {
        if (confirm("Are you sure you want to delete this user?")) {
            document.getElementById("deleteUserId").value = userId;
            document.getElementById("deleteForm").submit();
        }
    }
</script>